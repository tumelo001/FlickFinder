@model IEnumerable<Movie>
@{
    bool isVisible = true;
    var controller = Context.GetRouteValue("Controller").ToString();
    var action = Context.GetRouteValue("Action").ToString();
}

@if (Model == null || Model.Count() == 0)
{
    <h5 class="text-muted text-center mt-5">
        No Content
    </h5>
}
else
{
    <div id="@ViewData["Id"]" class="carousel slide mt-2">
        <div class="carousel-inner">
            @for (int i = 0; i < Model.Count(); i += 6)
            {
                isVisible = i == 0;
                <div class="carousel-item @(i == 0 ? "active" : "")">
                    <div class="row">
                        @for (int j = i; j < Math.Min(i + 6, Model.Count()); j++)
                        {
                            var movie = Model.ElementAt(j);
                            @await Html.PartialAsync("_MovieCard", movie);
                        }
                    </div>
                </div>
            }
        </div>
        <button class="carousel-control-prev" style="@(action == "Details" && controller == "Movies" ? "position:absolute; left: -80px;" : " ")" type="button" data-bs-target="#@ViewData["Id"]" data-bs-slide="prev">
            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
            <span class="visually-hidden">Previous</span>
        </button>
        <button class="carousel-control-next" style="@(action == "Details" && controller == "Movies" ? "position:absolute; right: -80px;" : " ")" type="button" data-bs-target="#@ViewData["Id"]" data-bs-slide="next">
            <span class="carousel-control-next-icon text-dark" aria-hidden="true"></span>
            <span class="visually-hidden">Next</span>
        </button>
    </div>
}
